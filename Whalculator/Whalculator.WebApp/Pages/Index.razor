@page "/"

@using Whalculator.WebApp.Data
@using Whalculator.Core.Calculator.Equation
@inject CalculatorService CalculatorService

<h1>Calculator</h1>

@if (instance is null) {
    <p><em>Loading...</em></p>
} else {
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div id="output">
                    @foreach (string s in this.output) {
                        <span class="output-text">@s</span>
                    }
                </div>

                <br />

                <EditForm Model="@InputModel" OnValidSubmit="@HandleInput">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <InputText id="input" class="w-100" @bind-Value="InputModel.InputText" />
                </EditForm>
            </div>
        </div>
    </div>
}
<link href="css/index.css" rel="stylesheet" />

@code {

    private LinkedList<string> output = new LinkedList<string>();

    private CalculatorInstance? instance;

    private CalculatorInputModel InputModel { get; } = new CalculatorInputModel();

    protected override async Task OnInitializedAsync() {
        this.instance = await CalculatorService.GetInstanceAsync();
    }

    private void HandleInput() {
        if (this.instance is null) {
            return;
        }

        string result;
        string input = InputModel.InputText ?? "";

        this.output.AddLast(input);

        try {
            input = input.Replace(" ", "");

            int idx = input.IndexOf("d/dx");
            if (idx == 0) {
                string body = input.Substring(4);
                result = this.instance.Calculator.GetSolvableFromText(body).GetDerivative("x").GetEquationString();
            } else {
                int i = input.IndexOf('=');
                if (i == -1) {
                    result = this.instance.Calculator.GetResultValue(input).GetEquationString();
                } else {
                    string head = input.Substring(0, i);
                    string body = input.Substring(i + 1);

                    int hi = head.IndexOf('(');
                    if (hi == -1) {
                        this.instance.Calculator.SetVariable(head, body);
                    } else {
                        this.instance.Calculator.SetFunction(head, body);
                    }

                    result = "Set " + head + "!";
                }
            }
        } catch (Exception) {
            result = "ERROR";
        }

        this.output.AddLast($"=> {result}");
        InputModel.InputText = "";
    }

}
